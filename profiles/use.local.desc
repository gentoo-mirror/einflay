# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-emulation/lxc:apparmor - Enable AppArmor support
app-emulation/lxc:cgmanager - Enable support for cgroup management using app-admin/cgmanager
app-emulation/lxc:templates - Install old style templates through app-emulation/lxc-templates
dev-python/pivy:quarter - Use media-libs/quarter for GUI bindings
dev-python/pivy:soqt - Use media-libs/SoQt for GUI bindings
dev-python/pyside2-tools:tools - Install supplementary tools (rcc, uic, designer)
games-strategy/freeciv:aimodules - Support for dynamically loadable AI modules (server-side)
games-strategy/freeciv:auth - Add authentication capability via mysql, postgres or sqlite3
games-strategy/freeciv:mapimg - Additional mag image toolkit via media-gfx/imagemagick
games-strategy/freeciv:modpack - Build the freeciv-modpack-program to download/install mods
games-strategy/freeciv:server - Enable server support. Disabling this will also make it impossible to start local games.
games-strategy/freeciv:sound - Add support for sound provided by media-libs/sdl-mixer
games-strategy/freeciv:system-lua - Use dev-lang/lua instead of the bundled liblua
media-gfx/freecad:addonmgr - Build the addon manager module for automatic handling of 3rd party addons
media-gfx/freecad:arch - Build the architecture workbench for working with architectural elements
media-gfx/freecad:assembly - Build the assembly module
media-gfx/freecad:drawing - Build the drawing module and workbench to display 3D work on a 2D sheet
media-gfx/freecad:fem - Build the FEM module and workbench which provides Finite Element Analysis (FEA) workflows
media-gfx/freecad:idf - Build the IDF module to provide file exchange capabilities with IDF files
media-gfx/freecad:image - Build the image module and workbench for working with bitmap images
media-gfx/freecad:inspection - Build the inspection workbench which gives you specific tools for examination of shapes (experimental)
media-gfx/freecad:material - Build the material module and workbench to work with materials
media-gfx/freecad:mesh - Build the mesh module and workbench to work with triangulated meshes
media-gfx/freecad:netgen - Support sci-mathematics/netgen with the FEM workbench
media-gfx/freecad:openscad - Build the OpenSCAD module for interoperability with OpenSCAD and repairing Constructive Solid Geometry (CSG) history
media-gfx/freecad:part-design - Build the part design module and workbench for build part shapes from sketches
media-gfx/freecad:path - Build the path module and workbench to procude G-Code instructions for CNC
media-gfx/freecad:pcl - Use external sci-libs/pcl for point clouds support.
media-gfx/freecad:plot - Build the internal plot workbench. NOTE: This conflicts with the external plot workbench, which you can add via the Addon Manager!
media-gfx/freecad:points - Build the points module and workbench for working with point clouds
media-gfx/freecad:raytracing - Build the raytracing module and workbench for raytracing and rendering
media-gfx/freecad:robot - Build the robot module and workbench for studying robot movements
media-gfx/freecad:ship - Build the ship module and workbench which works over ship entities, that must be created on top of provided geometry. NOTE: This conflicts with the external ship workbench, which you can add via the Addon Manager!
media-gfx/freecad:show - Build the show module, a helper module for visibility automation
media-gfx/freecad:spreadsheet - Build the spreadsheet module and workbench to create and manipulate spreadsheet data
media-gfx/freecad:surface - Build the surface module and workbench
media-gfx/freecad:techdraw - Build the techdraw module and workbench, a more advanced and feature-rich successor of the drawing workbench
media-gfx/freecad:tux - Build the Tux module
media-gfx/ktikz:ktexteditor - Using KTextEditor framework
media-libs/draco:compat - Build in compatibility mode.
media-libs/draco:gltf - Compile with support for glTF (GL Transmission Format) from The Khronos Group Inc.
sys-kernel/gentoo-sources:experimental - Apply experimental patches; for more information, see "https://wiki.gentoo.org/wiki/Project:Kernel/Experimental".
